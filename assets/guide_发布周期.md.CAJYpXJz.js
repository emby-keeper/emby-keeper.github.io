import{_ as r,o as t,c as a,a3 as o}from"./chunks/framework.ALOVYkDE.js";const l=JSON.parse('{"title":"发布周期","description":"","frontmatter":{},"headers":[],"relativePath":"guide/发布周期.md","filePath":"guide/发布周期.md"}'),n={name:"guide/发布周期.md"};function p(c,e,d,s,i,m){return t(),a("div",{"data-pagefind-body":!0},e[0]||(e[0]=[o('<h1 id="发布周期" tabindex="-1">发布周期 <a class="header-anchor" href="#发布周期" aria-label="Permalink to &quot;发布周期&quot;">​</a></h1><p>Embykeeper 使用常见的 Python 3 数字版本号, 形式为 <code>A.B.C</code>, 给定的版本总是冻结的, 指向其构建时的固定源代码. 只要我们的托管服务商 (GitHub) 仍能很好地无限期保留它们, 我们就不打算移除之前发布的任何版本, 因此您可以安全地回滚到任何版本, 而无需自行保留备份.</p><p>我们会尽力遵循 <code>主版本号.次版本号.修订</code> 形式的 <a href="https://semver.org/lang/zh-CN/" target="_blank" rel="noreferrer">semver</a> (语义化版本).</p><p>Embykeeper 项目的格式检查, 自动化测试, 包发布, Docker 镜像生成和发布均由 <a href="https://github.com/embykeeper/embykeeper/actions" target="_blank" rel="noreferrer">CI 流程</a>​提供支持. 每个构建都应该是可重现的, 因此如果您获取对应版本的源代码 (在发布页面同时提供) 并自行生成 Docker 镜像, 其结果应该与我们在 <a href="https://hub.docker.com/r/embykeeper/embykeeper" target="_blank" rel="noreferrer">Dockerhub</a> 上托管的镜像相同. 只要系统还能正常工作, 我们通常避免自行生成发布, 已发布的镜像都直接来自于 CI 流程.</p>',4)]))}const b=r(n,[["render",p]]);export{l as __pageData,b as default};
